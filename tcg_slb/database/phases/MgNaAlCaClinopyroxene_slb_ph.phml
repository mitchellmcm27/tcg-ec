<?xml version='1.0' encoding='utf-8'?>
<phase_options>
  <name name="MgNaAlCaClinopyroxene_slb_ph">
    <abbrev name="mgcacpx"/>
  </name>
  <formula>
    <formula_string>
      <string_value lines="1">Mg[Mg]Ca[Ca]Si2O6</string_value>
    </formula_string>
    <conversion_string>
      <string_value lines="1">['[0]=([Mg] - ([Ca] - ([Al]-[Na])/2.0))/2.0', '[1]=[Na]', '[2]=[Ca] - ([Al]-[Na])/2.0', '[3]=([Al]-[Na])/2.0']</string_value>
    </conversion_string>
    <test_string>
      <string_value lines="1">['[0] &gt; 0.0', '[1] &gt; 0.0', '[2] &gt; 0.0', '[3] &gt; 0.0']</string_value>
    </test_string>
  </formula>
  <reference>
    <string_value lines="1">generate_additional_phases</string_value>
  </reference>
  <endmembers>
    <endmember_name name="Clinoenstatite_slb_em"/>
    <endmember_name name="Jadeite_slb_em"/>
    <endmember_name name="Diopside_slb_em"/>
    <endmember_name name="CaTschermaks_slb_em"/>
  </endmembers>
  <free_energy_model name="Gibbs">
    <variable name="T">
      <rank name="Scalar"/>
      <units>K</units>
    </variable>
    <variable name="P">
      <rank name="Scalar"/>
      <units>bar</units>
    </variable>
    <variable name="n">
      <rank name="Vector">
        <size>K</size>
      </rank>
      <units>mol</units>
      <symbol>
        <string_value lines="1">Matrix([[n1], [n2], [n3], [n4]])</string_value>
      </symbol>
    </variable>
    <function name="mu">
      <type name="external">
        <rank name="Vector">
          <size>K</size>
        </rank>
        <variable name="T">
          <rank name="Scalar"/>
          <units>K</units>
        </variable>
        <variable name="P">
          <rank name="Scalar"/>
          <units>bar</units>
        </variable>
      </type>
      <symbol>
        <string_value lines="1">Matrix([[mu1(T, P)], [mu2(T, P)], [mu3(T, P)], [mu4(T, P)]])</string_value>
      </symbol>
    </function>
  </free_energy_model>
  <parameters>
    <parameter name="T_r">
      <rank name="Scalar">
        <value>
          <real_value rank="0">300</real_value>
        </value>
        <units>
          <string_value lines="1">'K'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="P_r">
      <rank name="Scalar">
        <value>
          <real_value rank="0">1</real_value>
        </value>
        <units>
          <string_value lines="1">'bar'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="R">
      <rank name="Scalar">
        <value>
          <real_value rank="0">8.31446261815324</real_value>
        </value>
        <units>
          <string_value lines="1">'J/K/mol'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="d_0">
      <rank name="Scalar">
        <value>
          <real_value rank="0">1</real_value>
        </value>
        <units>
          <string_value lines="1">'None'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="d_1">
      <rank name="Scalar">
        <value>
          <real_value rank="0">1</real_value>
        </value>
        <units>
          <string_value lines="1">'None'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="d_2">
      <rank name="Scalar">
        <value>
          <real_value rank="0">1</real_value>
        </value>
        <units>
          <string_value lines="1">'None'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="d_3">
      <rank name="Scalar">
        <value>
          <real_value rank="0">3.5</real_value>
        </value>
        <units>
          <string_value lines="1">'None'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="W_12">
      <rank name="Scalar">
        <value>
          <real_value rank="0">0</real_value>
        </value>
        <units>
          <string_value lines="1">'J/mol'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="W_13">
      <rank name="Scalar">
        <value>
          <real_value rank="0">24700</real_value>
        </value>
        <units>
          <string_value lines="1">'J/mol'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="W_23">
      <rank name="Scalar">
        <value>
          <real_value rank="0">0</real_value>
        </value>
        <units>
          <string_value lines="1">'J/mol'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="W_14">
      <rank name="Scalar">
        <value>
          <real_value rank="0">26000</real_value>
        </value>
        <units>
          <string_value lines="1">'J/mol'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="W_24">
      <rank name="Scalar">
        <value>
          <real_value rank="0">10000</real_value>
        </value>
        <units>
          <string_value lines="1">'J/mol'</string_value>
        </units>
      </rank>
    </parameter>
    <parameter name="W_34">
      <rank name="Scalar">
        <value>
          <real_value rank="0">24700</real_value>
        </value>
        <units>
          <string_value lines="1">'J/mol'</string_value>
        </units>
      </rank>
    </parameter>
  </parameters>
  <functions/>
  <potential name="G">
    <expression>
      <string_value type="code" language="python" lines="20">G = (
R*T*(1.0*n1*log(n1/(n1 + n2 + n3 + n4)) + 1.0*n2*log(n2/(n1 + n2 + n3
+ n4)) + 1.0*n4*(log(n4/(n1 + n2 + n3 + n4)) - 0.693147180559945) +
1.0*(n1 + n3)*log((n1 + n3)/(n1 + n2 + n3 + n4)) + 1.0*(n2 +
n4)*log((n2 + n4)/(n1 + n2 + n3 + n4)) + 1.0*(n3 + n4)*log((n3 +
n4)/(n1 + n2 + n3 + n4)) + 2.0*(1.0*n1 + 1.0*n2 + 1.0*n3 +
0.5*n4)*log((1.0*n1 + 1.0*n2 + 1.0*n3 + 0.5*n4)/(n1 + n2 + n3 + n4)))
+ n1*mu1(T, P) + n2*mu2(T, P) + n3*mu3(T, P) + n4*mu4(T, P) +
(d_0*n1*(d_1 + d_2)*(d_1 + d_3)*(d_2 + d_3)*(W_12*d_1*n2*(d_0 +
d_2)*(d_0 + d_3) + W_13*d_2*n3*(d_0 + d_1)*(d_0 + d_3) +
W_14*d_3*n4*(d_0 + d_1)*(d_0 + d_2)) + d_1*n2*(d_0 + d_2)*(d_0 +
d_3)*(d_2 + d_3)*(W_12*d_0*n1*(d_1 + d_2)*(d_1 + d_3) +
W_23*d_2*n3*(d_0 + d_1)*(d_1 + d_3) + W_24*d_3*n4*(d_0 + d_1)*(d_1 +
d_2)) + d_2*n3*(d_0 + d_1)*(d_0 + d_3)*(d_1 + d_3)*(W_13*d_0*n1*(d_1 +
d_2)*(d_2 + d_3) + W_23*d_1*n2*(d_0 + d_2)*(d_2 + d_3) +
W_34*d_3*n4*(d_0 + d_2)*(d_1 + d_2)) + d_3*n4*(d_0 + d_1)*(d_0 +
d_2)*(d_1 + d_2)*(W_14*d_0*n1*(d_1 + d_3)*(d_2 + d_3) +
W_24*d_1*n2*(d_0 + d_3)*(d_2 + d_3) + W_34*d_2*n3*(d_0 + d_3)*(d_1 +
d_3)))/((d_0 + d_1)*(d_0 + d_2)*(d_0 + d_3)*(d_1 + d_2)*(d_1 +
d_3)*(d_2 + d_3)*(d_0*n1 + d_1*n2 + d_2*n3 + d_3*n4))
)</string_value>
    </expression>
  </potential>
</phase_options>
