# This file was generated by running
#
#     python cmake/scripts/generate-cmakefiles from dolfinx/cpp
#
cmake_minimum_required(VERSION 3.16)

set(PROJECT_NAME phasediagram)
project(${PROJECT_NAME} LANGUAGES C CXX)

# Set C++17 standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if (NOT TARGET dolfinx)
  find_package(DOLFINX REQUIRED)
endif()

# Add target to compile UFL files
if (PETSC_SCALAR_COMPLEX EQUAL 1)
  set(SCALAR_TYPE "--scalar_type=double _Complex")
endif()
add_custom_command(
  OUTPUT PhaseDiagramTS.c
  COMMAND ffcx ${CMAKE_CURRENT_SOURCE_DIR}/PhaseDiagramTS.py ${SCALAR_TYPE}
  VERBATIM DEPENDS PhaseDiagramTS.py COMMENT "Compile PhaseDiagramTS.py using FFCx")

set(CMAKE_INCLUDE_CURRENT_DIR ON)

add_executable(${PROJECT_NAME} main.cpp ${CMAKE_CURRENT_BINARY_DIR}/PhaseDiagramTS.c)
target_link_libraries(${PROJECT_NAME} dolfinx)
target_link_libraries(${PROJECT_NAME} MgFeSiO4_all_slb_rx)
include_directories("${CMAKE_SOURCE_DIR}/../../../include/fenicsx")

# Do not throw error for 'multi-line comments' (these are typical in
# rst which includes LaTeX)
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-Wno-comment" HAVE_NO_MULTLINE)
set_source_files_properties(main.cpp PROPERTIES COMPILE_FLAGS "$<$<BOOL:${HAVE_NO_MULTLINE}>:-Wno-comment -Wall -Wextra -pedantic>")

add_test(NAME ${PROJECT_NAME}_serial COMMAND ${PROJECT_NAME})
