#!/usr/bin/env python3

import os,sys
import pandas as pd
from thermocodegen.coder import coder

sys.path.append(os.path.join(os.path.dirname(__file__), os.path.pardir, 'python'))
from tcg_slb.endmember import SLBEndmember

def generate_endmembers(outdir):
  reference= 'generate_endmembers' 

  df = pd.read_csv(os.path.join(os.path.dirname(__file__), os.path.pardir, 'database', 'data', 'stx21ver.csv'), skipinitialspace=True)

  try:
      os.mkdir(outdir)
  except FileExistsError:
      pass

  for i, row in df.iterrows():
      values_dict = row.to_dict()
      # clean up names to make them coder compliant
      name = values_dict.pop('name').replace('-','_')+'_slb_em'
      formula = values_dict.pop('formula')
      em = SLBEndmember(name,formula,reference,**values_dict)
      print(em.tofile(outdir))

if __name__ == "__main__":
    import argparse
    import os

    parser = argparse.ArgumentParser( \
                           description="""Generate emmls for SLB thermodynamic database.""")
    parser.add_argument('-o', '--outdir', action='store', metavar='outdir', 
                        default=os.path.join(os.path.dirname(__file__), os.path.pardir, 'database', 'endmembers'), type=str, required=False,
                        help='Output directory for emml files (defaults to ../database/endmembers relative to script).')
    args = parser.parse_args()

    generate_endmembers(args.outdir)


